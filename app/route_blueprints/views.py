from flask import Blueprint, make_response, render_template, redirect, url_for, current_app, jsonify
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy import select, desc, func
from app.models import Player, Game, game_player
from app.services.player_services import PlayerServices
from app.utils.db_utils import get_db, add_db_item
from datetime import date
"""Display informatio for user"""
view_bp = Blueprint('/',__name__,  url_prefix='/')

@view_bp.route('/')
def view_home():
    current_date = date.today()

    db = get_db()
    
    all_games = db.session.execute(select(Game).order_by(Game.date.desc())).mappings().all()

    return render_template("index.html", people=Player.query.all(), game_history= [game["Game"] for game in all_games] ,today=current_date.strftime("%m/%d/%Y"))


@view_bp.route('/remove-player')
def remove_player():
    # p = Player.query.get()
    # if p:
    #     db = get_db()
    #     db.session.delete(p)
    #     db.session.commit()
    return "hi"

@view_bp.route('/stats')
def stats():        
    # Retrieve players and sort by rank

    ## NOTE: statement generated by ChatGPT
    x = get_db().session.execute(
        select(
            Player,
            func.sum(game_player.c.score).label("total_score")
        )
        .join(game_player, Player.player_id == game_player.c.player_id)
        .group_by(Player.player_id, Player.first_name)
        .order_by(desc("total_score"))
    ).all()
    # NOTE: END generation

    return render_template("stats.html",  people=[player for player, _ in x])

    # # NOTE: redirect to another template follows <name>.<function_name>
    # return redirect(url_for("api.api_home"))


@view_bp.route('/stats/<username>')
def get_stats(username):

    return render_template("stats.html",  player=PlayerServices.get_player(username).to_json())